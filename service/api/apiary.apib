FORMAT: 1A
HOST: http://112.124.47.197:4000/

# Runner API

## Group User

### Login [POST /api/runner/user/login]

+ Request(application/json)

  + Body

    {
      "userid": "test123",
      "password": "12345678"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Login successful"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Fail to login",
      "data": {
        "error":"error_message"
      }

### Register [POST /api/runner/user/register]

+ Request (application/json)

  + Body

    {
      "userid":"test123",
      "username":"test",
      "password":"12345678",
      "school":"test_school",
      "email":"test@163.com",
      "phone":"12345679101"
    }

+ Response 200 (application/json)

  + Header

    + Location: /api/runner/user/login

  + Body

    {
      "message":"Registered successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Fail to register",
      "data": {
        "error":"error_message"
      }
    }

### Logout [POST /api/runner/user/logout]

+ Response 200 (application/json)

    + Header

      + Location: /api/runner/login

    + Response

      + Body

        {
          "message":"Logout successful"
        }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to logout",
      "data": {
        "error":"error_message"
      }
    }

### Get User Message [GET /api/runner/user{?userid}]

+ Parameters

  + userid (string, required)

+ Response 200 (application/json)

  + Body

    {
      "userid":"test_user",
      "username":"test_user",
      "school":"test_school",
      "email":"test@163.com",
      "phone":"12345679101"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to get user information",
      "data": {
        "error":"error_message"
      }
    }


## Group Plan

### Create Plan [POST /api/runner/plan]

+ Request (application/json)

  + Body

    {
      "planname":"test_plan",
      "runtime":"2017-12-27 10:00",
      "partner":["test_partner1", "test_partner2", "test_partner3"],
      "place":"tset_place"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"create plan success",
      "planid":"1"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to create plan",
      "data": {
        "error":"error_message"
      }
    }

### Get All Plans [GET /api/runner/plans]

+ Response 200 (application/json)

  + Body
    {
       "1":{
          "planid":"1",
          "planname":"test_plan1",
          "author":"test_author1",
          "runtime":"2017-12-27 10:00:00",
          "partner":["test_partner1", "test_partner2", "test_partner3"],
          "place":"tset_place1"
        },
        "3":{
          "planid":"3",
          "planname":"test_plan1",
          "author":"test_author1",
          "runtime":"2017-12-27 10:00:00",
          "addtime":"2017-12-26 10:00:00",
          "partner":["test_partner1", "test_partner2", "test_partner3"],
          "place":"tset_place1"
        }
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to get all plans",
      "data": {
        "error":"error_message"
      }
    }

### Delete Plan [DELETE /api/runner/plan]

+ Request (application/json)

  + Body

    {
      "planid":"1"
    }

+ Response 200 (application/json)

    + Header

      Location: /api/plan

    + Body

      {
        "message":"Delete plan successfully"
      }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to delete plan",
      "data": {
        "error":"error_message"
      }
    }

### UPDATE Plan [PUT /api/runner/plan]

+ Request (application/json)

  + Body

    {
      "planid":"1",
      "planname":"test_plan",
      "runtime":"2017-12-27 10:00:00",
      "partner":["test_partner1", "test_partner2", "test_partner3"],
      "place":"tset_place"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Update plan successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to update plan",
      "data": {
        "error":"error_message"
      }
    }


## Group Music List

### Create Music [POST /api/runner/music]

+ Request (application/json)

  + Body

    {
      "musicname":["test_music1", "test_music2"]
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Create music list successfully",
      "musicid":"1"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to create music list",
      "data": {
        "error":"error_message"
      }
    }

### Update Music [PUT /api/runner/music]

+ Request (application/json)

  + Body

    {
      "musicid":"1",
      "musicname":["test_music1", "test_music2"]
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Update music list successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to update music list",
      "data": {
        "error":"error_message"
      }
    }

### Delete Music [DELETE /api/runner/music]

+ Request (application/json)

  + Body

    {
      "musicid":"1"
    }

+ Response 200 (application/json)

  + Body

    {
      "message": "Delete music list successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to get music list",
      "data": {
        "error":"error_message"
      }
    }

### Get All Musics [GET /api/runner/musics]

+ Response 200 (application/json)

  + Body

    {
      "1":  {
          "musicid":"1",
          "musicname":["test_music1"]
        }
    }

+ Response 400 (application/json)

  + Body
    {
      "message": "Failed to get music list",
      "data": {
        "error":"error_message"
      }
    }

## Group Article

### Create Article [POST /api/runner/article]

+ Request (application/json)

  + Body

    {
      "title":"test_article",
      "content":"tset_content"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Create article successfully",
      "articleid":"1"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to create article",
      "data": {
        "error":"error_message"
      }
    }

### Delete Article [DELETE /api/runner/article]

+ Request (application/json)

  + Body

    {
      "articleid":"1"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Create article successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to delete music list",
      "data": {
        "error":"error_message"
      }
    }

### Get All Article [GET /api/runner/articles]

+ Response 200 (application/json)

  + Body

  {
    
     "1": {
        "articleid":"1",
        "title":"test_title1",
        "author":"test_author",
        "content":"test_cotent",
        "addtime":"2017-12-27 13:00"
      },
      "3":{
        "articleid":"3",
        "author":"test_author",
        "content":"test_cotent",
        "addtime":"2017-12-27 13:00"
      }
    
  }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to get all artciles",
      "data": {
        "error":"error_message"
      }
    }

## Group Comment

### Create Comment [POST /api/runner/comment]

+ Request (application/json)

  + Body

    {
      "articleid":"1",
      "content":"comment_content"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Create comment successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to create comment",
      "data": {
        "error":"error_message"
      }
    }

### Delete Comment [DELETE /api/runner/comment]

+ Request (application/json)

  + Body

    {
      "articleid":"1",
      "commentid":"1"
    }

+ Response 200 (application/json)

  + Body

    {
      "message":"Delete comment successfully"
    }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to delete comment",
      "data": {
        "error":"error_message"
      }
    }

### Get All Comments [GET /api/runner/comments]

+ Response 200 (application/json)

  + Body

  {
     "1": {
        "commentid":"1",
        "articleid":"test_title1",
        "author":"test_content1",
        "content":"test_content",
        "addtime":"2017-12-27 13:00:00"
      },
      "2":{
        "commentid":"2",
        "articleid":"test_title1",
        "author":"test_content1",
        "content":"test_content",
        "addtime":"2017-12-27 13:00:00"
      }
  }

+ Response 400 (application/json)

  + Body

    {
      "message": "Failed to get all comments",
      "data": {
        "error":"error_message"
      }
    }
